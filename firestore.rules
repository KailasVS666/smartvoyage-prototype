rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is in group members
    function isGroupMember(groupData) {
      return isAuthenticated() && groupData.members[request.auth.uid] != null;
    }

    // Helper function to check if user is group admin
    function isGroupAdmin(groupData) {
      return isAuthenticated() && groupData.members[request.auth.uid] == 'admin';
    }

    // Helper function to check if user is group editor or admin
    function canEditGroup(groupData) {
      return isAuthenticated() &&
        (groupData.members[request.auth.uid] == 'admin' ||
         groupData.members[request.auth.uid] == 'editor');
    }

    // Secure access for trips
    match /trips/{tripId} {
      // Allow list operations if user is authenticated
      allow list: if isAuthenticated();

      // Allow get if user is owner or in memberIds
      allow get: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        request.auth.uid in resource.data.memberIds
      );

      // Allow create if user is the owner or if it's a group trip and user is in memberIds
      allow create: if isAuthenticated() && (
        request.auth.uid == request.resource.data.userId ||
        (
          request.resource.data.groupId != null &&
          request.auth.uid in request.resource.data.memberIds
        )
      );
      
      // Allow update, delete if user is owner or in memberIds
      allow update, delete: if isAuthenticated() && (
        request.auth.uid == resource.data.userId ||
        request.auth.uid in resource.data.memberIds
      );
      
      // Comments subcollection rules
      match /comments/{commentId} {
        allow read: if isAuthenticated() && 
          request.auth.uid in get(/databases/$(database)/documents/trips/$(tripId)).data.memberIds;
        allow create: if isAuthenticated() && 
          request.auth.uid in get(/databases/$(database)/documents/trips/$(tripId)).data.memberIds &&
          request.resource.data.authorId == request.auth.uid;
        allow update, delete: if isAuthenticated() && 
          resource.data.authorId == request.auth.uid;
      }
    }

    // Groups collection rules
    match /groups/{groupId} {
      // Allow read if user is a member of the group or the creator
      allow read: if resource.data != null && (
        isGroupMember(resource.data) || (isAuthenticated() && resource.data.createdBy == request.auth.uid)
      );

      // Allow create if user is authenticated (they'll be set as admin)
      allow create: if isAuthenticated();

      // Allow update if user is admin or editor
      allow update: if resource.data != null && canEditGroup(resource.data);

      // Allow delete if user is admin
      allow delete: if resource.data != null && isGroupAdmin(resource.data);
    }

    // --- Default: Deny All ---
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
